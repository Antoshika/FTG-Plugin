#mod by Anonumyc Economy Team

"""
–ü–æ–∏—Å–∫–æ–≤–∏–∫ —Ç–∞–∫–∏–µ –∫–∞–∫ -> Google / YouTube / DuckDuckGo / GitHub / RBC / Xvideo / Xvideos2/ Pornhub / var / log / Dyno.

–ö–∞–∫–∏–µ –∫–ê–º–∞–Ω–¥—ã –∏ –∑–∞ —á—Ç–æ –æ–Ω–∏ –æ—Ç–≤–µ—á–∞—é—Ç?

.lmg <–ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å Google>

.lmy <–ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å YouTube>
 
.lmd <–ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å DuckDuckGo>
 
.lmw <–ø–æ–∏—Å–∫ –≤ Wikipedia>
 
.lmgit <–ø–æ–∏—Å–∫ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤ GitHub>

.lmnews <–ø–æ–∏—Å–∫ –Ω–æ–≤–æ—Å—Ç–µ–π>

.lmx <–ø–æ–∏—Å–∫ xvideos>
 
.lmx2 <–ø–æ–∏—Å–∫ xvideos2>

.lmp <–ø–æ–∏—Å–∫ pornhub>

.lmvar <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è heroku –Ω–∞—Å—Ç—Ä–æ–π–∫–∏>

.lmlog <–Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è heroku –ª–æ–≥–∏>

.dyno <—Ç–∏–ø –±–∏–ª–ª–∏–Ω–≥–∞>
 



"""







from telethon import events



import os



import requests



import json



from uniborg.util import admin_cmd











@borg.on(admin_cmd(pattern="lmg (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=http://google.com/search?q={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **Google** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")





@borg.on(admin_cmd(pattern="lmy (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://www.youtube.com/results?search_query={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **YouTube** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))


    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")




@borg.on(admin_cmd(pattern="lmd (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://duckduckgo.com/?q={}&t=h_&ia=about".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **DuckDuckGo** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")




@borg.on(admin_cmd(pattern="lmx (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://www.xvideos.com/?k={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **xvideos** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ –¢–æ–ª—å–∫–æ –Ω–µ –≤ –º—è—Å–æ, –æ–∫–µ–π?)` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")




@borg.on(admin_cmd(pattern="lmp (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://www.pornhub.com/video/search?search={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **PornoHub** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ –ò –¥–∞, –ª—É—á—à–µ –Ω–∞–π–¥–∏ —Å–µ–±–µ –ø–∞—Ä—É...` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")


@borg.on(admin_cmd(pattern="lmnews (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://www.rbc.ua/rus/search?search_text={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **RBC** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")



@borg.on(admin_cmd(pattern="lmvar (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://dashboard.heroku.com/apps/{}/settings".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **VAT** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")



@borg.on(admin_cmd(pattern="lmlog (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://dashboard.heroku.com/apps/{}/logs".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **LOG** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")

        
        
@borg.on(admin_cmd(pattern="lmx2 (.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://www.xvideos2.com/?k={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **xvideos2** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ –£–¥–∞—á–∏ –ø–æ–º–∞—Ç–∞—Ç—å —Å—Ç–≤–æ–ª)` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")
        
      


@borg.on(admin_cmd(pattern="dyno(.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://dashboard.heroku.com/account/{}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **Dyno** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")
      
@borg.on(admin_cmd(pattern="lmgit(.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://github.com/search?q={}".format(input_str.replace(" ","+"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **GitHub** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª –≤–æ—Ç –∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")

@borg.on(admin_cmd(pattern="lmw(.*)"))



async def _(event):



    if event.fwd_from:



        return



    input_str = event.pattern_match.group(1)



    sample_url = "https://da.gd/s?url=https://ru.wikipedia.org/wiki/{}".format(input_str.replace(" ","_"))



    response_api = requests.get(sample_url).text



    if response_api:



        await event.edit("–Ø –Ω–∞—à—ë–ª —Ç–≤–æ–π –∑–∞–ø—Ä–æ—Å –≤ **Wikipedia** –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –ø—Ä–æ—Å–∏–ª:\nüëâ [{}]({})\n`–í–æ—Ç —Ç–æ—Ç —Å–∞–º—ã–π –∑–∞–ø—Ä–æ—Å... üòâ –ùy... –•–æ—Ç—å —á–µ–º-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—à—å—Å—è)` ".format(input_str,response_api.rstrip()))



    else:



        await event.edit("–≠–º.. –¢—ã –≤—Å—ë –≤–µ—Ä–Ω–æ –¥—è–¥—å –≤—ë–ª?...")